// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ortools/math_opt/rpc.proto
// Protobuf C++ Version: 4.25.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_ortools_2fmath_5fopt_2frpc_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_ortools_2fmath_5fopt_2frpc_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "ortools/math_opt/callback.pb.h"
#include "ortools/math_opt/infeasible_subsystem.pb.h"
#include "ortools/math_opt/model.pb.h"
#include "ortools/math_opt/model_parameters.pb.h"
#include "ortools/math_opt/model_update.pb.h"
#include "ortools/math_opt/parameters.pb.h"
#include "ortools/math_opt/result.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ortools_2fmath_5fopt_2frpc_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ortools_2fmath_5fopt_2frpc_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_ortools_2fmath_5fopt_2frpc_2eproto;
namespace operations_research {
namespace math_opt {
class SolveRequest;
struct SolveRequestDefaultTypeInternal;
extern SolveRequestDefaultTypeInternal _SolveRequest_default_instance_;
class SolveResponse;
struct SolveResponseDefaultTypeInternal;
extern SolveResponseDefaultTypeInternal _SolveResponse_default_instance_;
class SolverResourcesProto;
struct SolverResourcesProtoDefaultTypeInternal;
extern SolverResourcesProtoDefaultTypeInternal _SolverResourcesProto_default_instance_;
}  // namespace math_opt
}  // namespace operations_research
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace operations_research {
namespace math_opt {

// ===================================================================


// -------------------------------------------------------------------

class SolverResourcesProto final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.math_opt.SolverResourcesProto) */ {
 public:
  inline SolverResourcesProto() : SolverResourcesProto(nullptr) {}
  ~SolverResourcesProto() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SolverResourcesProto(::google::protobuf::internal::ConstantInitialized);

  inline SolverResourcesProto(const SolverResourcesProto& from)
      : SolverResourcesProto(nullptr, from) {}
  SolverResourcesProto(SolverResourcesProto&& from) noexcept
    : SolverResourcesProto() {
    *this = ::std::move(from);
  }

  inline SolverResourcesProto& operator=(const SolverResourcesProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline SolverResourcesProto& operator=(SolverResourcesProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SolverResourcesProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const SolverResourcesProto* internal_default_instance() {
    return reinterpret_cast<const SolverResourcesProto*>(
               &_SolverResourcesProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SolverResourcesProto& a, SolverResourcesProto& b) {
    a.Swap(&b);
  }
  inline void Swap(SolverResourcesProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SolverResourcesProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SolverResourcesProto* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SolverResourcesProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SolverResourcesProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SolverResourcesProto& from) {
    SolverResourcesProto::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SolverResourcesProto* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.math_opt.SolverResourcesProto";
  }
  protected:
  explicit SolverResourcesProto(::google::protobuf::Arena* arena);
  SolverResourcesProto(::google::protobuf::Arena* arena, const SolverResourcesProto& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCpuFieldNumber = 1,
  };
  // optional double cpu = 1;
  bool has_cpu() const;
  void clear_cpu() ;
  double cpu() const;
  void set_cpu(double value);

  private:
  double _internal_cpu() const;
  void _internal_set_cpu(double value);

  public:
  // @@protoc_insertion_point(class_scope:operations_research.math_opt.SolverResourcesProto)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    double cpu_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fmath_5fopt_2frpc_2eproto;
};// -------------------------------------------------------------------

class SolveResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.math_opt.SolveResponse) */ {
 public:
  inline SolveResponse() : SolveResponse(nullptr) {}
  ~SolveResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SolveResponse(::google::protobuf::internal::ConstantInitialized);

  inline SolveResponse(const SolveResponse& from)
      : SolveResponse(nullptr, from) {}
  SolveResponse(SolveResponse&& from) noexcept
    : SolveResponse() {
    *this = ::std::move(from);
  }

  inline SolveResponse& operator=(const SolveResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SolveResponse& operator=(SolveResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SolveResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SolveResponse* internal_default_instance() {
    return reinterpret_cast<const SolveResponse*>(
               &_SolveResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(SolveResponse& a, SolveResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SolveResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SolveResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SolveResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SolveResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SolveResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SolveResponse& from) {
    SolveResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SolveResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.math_opt.SolveResponse";
  }
  protected:
  explicit SolveResponse(::google::protobuf::Arena* arena);
  SolveResponse(::google::protobuf::Arena* arena, const SolveResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessagesFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // repeated string messages = 2;
  int messages_size() const;
  private:
  int _internal_messages_size() const;

  public:
  void clear_messages() ;
  const std::string& messages(int index) const;
  std::string* mutable_messages(int index);
  void set_messages(int index, const std::string& value);
  void set_messages(int index, std::string&& value);
  void set_messages(int index, const char* value);
  void set_messages(int index, const char* value, std::size_t size);
  void set_messages(int index, absl::string_view value);
  std::string* add_messages();
  void add_messages(const std::string& value);
  void add_messages(std::string&& value);
  void add_messages(const char* value);
  void add_messages(const char* value, std::size_t size);
  void add_messages(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& messages() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_messages();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_messages() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_messages();

  public:
  // .operations_research.math_opt.SolveResultProto result = 1;
  bool has_result() const;
  void clear_result() ;
  const ::operations_research::math_opt::SolveResultProto& result() const;
  PROTOBUF_NODISCARD ::operations_research::math_opt::SolveResultProto* release_result();
  ::operations_research::math_opt::SolveResultProto* mutable_result();
  void set_allocated_result(::operations_research::math_opt::SolveResultProto* value);
  void unsafe_arena_set_allocated_result(::operations_research::math_opt::SolveResultProto* value);
  ::operations_research::math_opt::SolveResultProto* unsafe_arena_release_result();

  private:
  const ::operations_research::math_opt::SolveResultProto& _internal_result() const;
  ::operations_research::math_opt::SolveResultProto* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:operations_research.math_opt.SolveResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      59, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> messages_;
    ::operations_research::math_opt::SolveResultProto* result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fmath_5fopt_2frpc_2eproto;
};// -------------------------------------------------------------------

class SolveRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.math_opt.SolveRequest) */ {
 public:
  inline SolveRequest() : SolveRequest(nullptr) {}
  ~SolveRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SolveRequest(::google::protobuf::internal::ConstantInitialized);

  inline SolveRequest(const SolveRequest& from)
      : SolveRequest(nullptr, from) {}
  SolveRequest(SolveRequest&& from) noexcept
    : SolveRequest() {
    *this = ::std::move(from);
  }

  inline SolveRequest& operator=(const SolveRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SolveRequest& operator=(SolveRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SolveRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SolveRequest* internal_default_instance() {
    return reinterpret_cast<const SolveRequest*>(
               &_SolveRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SolveRequest& a, SolveRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SolveRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SolveRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SolveRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SolveRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SolveRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SolveRequest& from) {
    SolveRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SolveRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.math_opt.SolveRequest";
  }
  protected:
  explicit SolveRequest(::google::protobuf::Arena* arena);
  SolveRequest(::google::protobuf::Arena* arena, const SolveRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModelFieldNumber = 2,
    kInitializerFieldNumber = 3,
    kParametersFieldNumber = 4,
    kModelParametersFieldNumber = 5,
    kResourcesFieldNumber = 6,
    kSolverTypeFieldNumber = 1,
  };
  // .operations_research.math_opt.ModelProto model = 2;
  bool has_model() const;
  void clear_model() ;
  const ::operations_research::math_opt::ModelProto& model() const;
  PROTOBUF_NODISCARD ::operations_research::math_opt::ModelProto* release_model();
  ::operations_research::math_opt::ModelProto* mutable_model();
  void set_allocated_model(::operations_research::math_opt::ModelProto* value);
  void unsafe_arena_set_allocated_model(::operations_research::math_opt::ModelProto* value);
  ::operations_research::math_opt::ModelProto* unsafe_arena_release_model();

  private:
  const ::operations_research::math_opt::ModelProto& _internal_model() const;
  ::operations_research::math_opt::ModelProto* _internal_mutable_model();

  public:
  // .operations_research.math_opt.SolverInitializerProto initializer = 3;
  bool has_initializer() const;
  void clear_initializer() ;
  const ::operations_research::math_opt::SolverInitializerProto& initializer() const;
  PROTOBUF_NODISCARD ::operations_research::math_opt::SolverInitializerProto* release_initializer();
  ::operations_research::math_opt::SolverInitializerProto* mutable_initializer();
  void set_allocated_initializer(::operations_research::math_opt::SolverInitializerProto* value);
  void unsafe_arena_set_allocated_initializer(::operations_research::math_opt::SolverInitializerProto* value);
  ::operations_research::math_opt::SolverInitializerProto* unsafe_arena_release_initializer();

  private:
  const ::operations_research::math_opt::SolverInitializerProto& _internal_initializer() const;
  ::operations_research::math_opt::SolverInitializerProto* _internal_mutable_initializer();

  public:
  // .operations_research.math_opt.SolveParametersProto parameters = 4;
  bool has_parameters() const;
  void clear_parameters() ;
  const ::operations_research::math_opt::SolveParametersProto& parameters() const;
  PROTOBUF_NODISCARD ::operations_research::math_opt::SolveParametersProto* release_parameters();
  ::operations_research::math_opt::SolveParametersProto* mutable_parameters();
  void set_allocated_parameters(::operations_research::math_opt::SolveParametersProto* value);
  void unsafe_arena_set_allocated_parameters(::operations_research::math_opt::SolveParametersProto* value);
  ::operations_research::math_opt::SolveParametersProto* unsafe_arena_release_parameters();

  private:
  const ::operations_research::math_opt::SolveParametersProto& _internal_parameters() const;
  ::operations_research::math_opt::SolveParametersProto* _internal_mutable_parameters();

  public:
  // .operations_research.math_opt.ModelSolveParametersProto model_parameters = 5;
  bool has_model_parameters() const;
  void clear_model_parameters() ;
  const ::operations_research::math_opt::ModelSolveParametersProto& model_parameters() const;
  PROTOBUF_NODISCARD ::operations_research::math_opt::ModelSolveParametersProto* release_model_parameters();
  ::operations_research::math_opt::ModelSolveParametersProto* mutable_model_parameters();
  void set_allocated_model_parameters(::operations_research::math_opt::ModelSolveParametersProto* value);
  void unsafe_arena_set_allocated_model_parameters(::operations_research::math_opt::ModelSolveParametersProto* value);
  ::operations_research::math_opt::ModelSolveParametersProto* unsafe_arena_release_model_parameters();

  private:
  const ::operations_research::math_opt::ModelSolveParametersProto& _internal_model_parameters() const;
  ::operations_research::math_opt::ModelSolveParametersProto* _internal_mutable_model_parameters();

  public:
  // .operations_research.math_opt.SolverResourcesProto resources = 6;
  bool has_resources() const;
  void clear_resources() ;
  const ::operations_research::math_opt::SolverResourcesProto& resources() const;
  PROTOBUF_NODISCARD ::operations_research::math_opt::SolverResourcesProto* release_resources();
  ::operations_research::math_opt::SolverResourcesProto* mutable_resources();
  void set_allocated_resources(::operations_research::math_opt::SolverResourcesProto* value);
  void unsafe_arena_set_allocated_resources(::operations_research::math_opt::SolverResourcesProto* value);
  ::operations_research::math_opt::SolverResourcesProto* unsafe_arena_release_resources();

  private:
  const ::operations_research::math_opt::SolverResourcesProto& _internal_resources() const;
  ::operations_research::math_opt::SolverResourcesProto* _internal_mutable_resources();

  public:
  // .operations_research.math_opt.SolverTypeProto solver_type = 1;
  void clear_solver_type() ;
  ::operations_research::math_opt::SolverTypeProto solver_type() const;
  void set_solver_type(::operations_research::math_opt::SolverTypeProto value);

  private:
  ::operations_research::math_opt::SolverTypeProto _internal_solver_type() const;
  void _internal_set_solver_type(::operations_research::math_opt::SolverTypeProto value);

  public:
  // @@protoc_insertion_point(class_scope:operations_research.math_opt.SolveRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 5,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::operations_research::math_opt::ModelProto* model_;
    ::operations_research::math_opt::SolverInitializerProto* initializer_;
    ::operations_research::math_opt::SolveParametersProto* parameters_;
    ::operations_research::math_opt::ModelSolveParametersProto* model_parameters_;
    ::operations_research::math_opt::SolverResourcesProto* resources_;
    int solver_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fmath_5fopt_2frpc_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SolverResourcesProto

// optional double cpu = 1;
inline bool SolverResourcesProto::has_cpu() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void SolverResourcesProto::clear_cpu() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cpu_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double SolverResourcesProto::cpu() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.SolverResourcesProto.cpu)
  return _internal_cpu();
}
inline void SolverResourcesProto::set_cpu(double value) {
  _internal_set_cpu(value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.SolverResourcesProto.cpu)
}
inline double SolverResourcesProto::_internal_cpu() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cpu_;
}
inline void SolverResourcesProto::_internal_set_cpu(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.cpu_ = value;
}

// -------------------------------------------------------------------

// SolveRequest

// .operations_research.math_opt.SolverTypeProto solver_type = 1;
inline void SolveRequest::clear_solver_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.solver_type_ = 0;
}
inline ::operations_research::math_opt::SolverTypeProto SolveRequest::solver_type() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.SolveRequest.solver_type)
  return _internal_solver_type();
}
inline void SolveRequest::set_solver_type(::operations_research::math_opt::SolverTypeProto value) {
  _internal_set_solver_type(value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.SolveRequest.solver_type)
}
inline ::operations_research::math_opt::SolverTypeProto SolveRequest::_internal_solver_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::operations_research::math_opt::SolverTypeProto>(_impl_.solver_type_);
}
inline void SolveRequest::_internal_set_solver_type(::operations_research::math_opt::SolverTypeProto value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.solver_type_ = value;
}

// .operations_research.math_opt.ModelProto model = 2;
inline bool SolveRequest::has_model() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.model_ != nullptr);
  return value;
}
inline const ::operations_research::math_opt::ModelProto& SolveRequest::_internal_model() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::operations_research::math_opt::ModelProto* p = _impl_.model_;
  return p != nullptr ? *p : reinterpret_cast<const ::operations_research::math_opt::ModelProto&>(::operations_research::math_opt::_ModelProto_default_instance_);
}
inline const ::operations_research::math_opt::ModelProto& SolveRequest::model() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.SolveRequest.model)
  return _internal_model();
}
inline void SolveRequest::unsafe_arena_set_allocated_model(::operations_research::math_opt::ModelProto* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.model_);
  }
  _impl_.model_ = reinterpret_cast<::operations_research::math_opt::ModelProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:operations_research.math_opt.SolveRequest.model)
}
inline ::operations_research::math_opt::ModelProto* SolveRequest::release_model() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::operations_research::math_opt::ModelProto* released = _impl_.model_;
  _impl_.model_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::operations_research::math_opt::ModelProto* SolveRequest::unsafe_arena_release_model() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.math_opt.SolveRequest.model)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::operations_research::math_opt::ModelProto* temp = _impl_.model_;
  _impl_.model_ = nullptr;
  return temp;
}
inline ::operations_research::math_opt::ModelProto* SolveRequest::_internal_mutable_model() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.model_ == nullptr) {
    auto* p = CreateMaybeMessage<::operations_research::math_opt::ModelProto>(GetArena());
    _impl_.model_ = reinterpret_cast<::operations_research::math_opt::ModelProto*>(p);
  }
  return _impl_.model_;
}
inline ::operations_research::math_opt::ModelProto* SolveRequest::mutable_model() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::operations_research::math_opt::ModelProto* _msg = _internal_mutable_model();
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.SolveRequest.model)
  return _msg;
}
inline void SolveRequest::set_allocated_model(::operations_research::math_opt::ModelProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.model_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.model_ = reinterpret_cast<::operations_research::math_opt::ModelProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:operations_research.math_opt.SolveRequest.model)
}

// .operations_research.math_opt.SolverResourcesProto resources = 6;
inline bool SolveRequest::has_resources() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.resources_ != nullptr);
  return value;
}
inline void SolveRequest::clear_resources() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.resources_ != nullptr) _impl_.resources_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::operations_research::math_opt::SolverResourcesProto& SolveRequest::_internal_resources() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::operations_research::math_opt::SolverResourcesProto* p = _impl_.resources_;
  return p != nullptr ? *p : reinterpret_cast<const ::operations_research::math_opt::SolverResourcesProto&>(::operations_research::math_opt::_SolverResourcesProto_default_instance_);
}
inline const ::operations_research::math_opt::SolverResourcesProto& SolveRequest::resources() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.SolveRequest.resources)
  return _internal_resources();
}
inline void SolveRequest::unsafe_arena_set_allocated_resources(::operations_research::math_opt::SolverResourcesProto* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.resources_);
  }
  _impl_.resources_ = reinterpret_cast<::operations_research::math_opt::SolverResourcesProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:operations_research.math_opt.SolveRequest.resources)
}
inline ::operations_research::math_opt::SolverResourcesProto* SolveRequest::release_resources() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::operations_research::math_opt::SolverResourcesProto* released = _impl_.resources_;
  _impl_.resources_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::operations_research::math_opt::SolverResourcesProto* SolveRequest::unsafe_arena_release_resources() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.math_opt.SolveRequest.resources)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::operations_research::math_opt::SolverResourcesProto* temp = _impl_.resources_;
  _impl_.resources_ = nullptr;
  return temp;
}
inline ::operations_research::math_opt::SolverResourcesProto* SolveRequest::_internal_mutable_resources() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000010u;
  if (_impl_.resources_ == nullptr) {
    auto* p = CreateMaybeMessage<::operations_research::math_opt::SolverResourcesProto>(GetArena());
    _impl_.resources_ = reinterpret_cast<::operations_research::math_opt::SolverResourcesProto*>(p);
  }
  return _impl_.resources_;
}
inline ::operations_research::math_opt::SolverResourcesProto* SolveRequest::mutable_resources() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::operations_research::math_opt::SolverResourcesProto* _msg = _internal_mutable_resources();
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.SolveRequest.resources)
  return _msg;
}
inline void SolveRequest::set_allocated_resources(::operations_research::math_opt::SolverResourcesProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::operations_research::math_opt::SolverResourcesProto*>(_impl_.resources_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::operations_research::math_opt::SolverResourcesProto*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.resources_ = reinterpret_cast<::operations_research::math_opt::SolverResourcesProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:operations_research.math_opt.SolveRequest.resources)
}

// .operations_research.math_opt.SolverInitializerProto initializer = 3;
inline bool SolveRequest::has_initializer() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.initializer_ != nullptr);
  return value;
}
inline const ::operations_research::math_opt::SolverInitializerProto& SolveRequest::_internal_initializer() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::operations_research::math_opt::SolverInitializerProto* p = _impl_.initializer_;
  return p != nullptr ? *p : reinterpret_cast<const ::operations_research::math_opt::SolverInitializerProto&>(::operations_research::math_opt::_SolverInitializerProto_default_instance_);
}
inline const ::operations_research::math_opt::SolverInitializerProto& SolveRequest::initializer() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.SolveRequest.initializer)
  return _internal_initializer();
}
inline void SolveRequest::unsafe_arena_set_allocated_initializer(::operations_research::math_opt::SolverInitializerProto* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.initializer_);
  }
  _impl_.initializer_ = reinterpret_cast<::operations_research::math_opt::SolverInitializerProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:operations_research.math_opt.SolveRequest.initializer)
}
inline ::operations_research::math_opt::SolverInitializerProto* SolveRequest::release_initializer() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::operations_research::math_opt::SolverInitializerProto* released = _impl_.initializer_;
  _impl_.initializer_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::operations_research::math_opt::SolverInitializerProto* SolveRequest::unsafe_arena_release_initializer() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.math_opt.SolveRequest.initializer)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::operations_research::math_opt::SolverInitializerProto* temp = _impl_.initializer_;
  _impl_.initializer_ = nullptr;
  return temp;
}
inline ::operations_research::math_opt::SolverInitializerProto* SolveRequest::_internal_mutable_initializer() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.initializer_ == nullptr) {
    auto* p = CreateMaybeMessage<::operations_research::math_opt::SolverInitializerProto>(GetArena());
    _impl_.initializer_ = reinterpret_cast<::operations_research::math_opt::SolverInitializerProto*>(p);
  }
  return _impl_.initializer_;
}
inline ::operations_research::math_opt::SolverInitializerProto* SolveRequest::mutable_initializer() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::operations_research::math_opt::SolverInitializerProto* _msg = _internal_mutable_initializer();
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.SolveRequest.initializer)
  return _msg;
}
inline void SolveRequest::set_allocated_initializer(::operations_research::math_opt::SolverInitializerProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.initializer_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.initializer_ = reinterpret_cast<::operations_research::math_opt::SolverInitializerProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:operations_research.math_opt.SolveRequest.initializer)
}

// .operations_research.math_opt.SolveParametersProto parameters = 4;
inline bool SolveRequest::has_parameters() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.parameters_ != nullptr);
  return value;
}
inline const ::operations_research::math_opt::SolveParametersProto& SolveRequest::_internal_parameters() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::operations_research::math_opt::SolveParametersProto* p = _impl_.parameters_;
  return p != nullptr ? *p : reinterpret_cast<const ::operations_research::math_opt::SolveParametersProto&>(::operations_research::math_opt::_SolveParametersProto_default_instance_);
}
inline const ::operations_research::math_opt::SolveParametersProto& SolveRequest::parameters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.SolveRequest.parameters)
  return _internal_parameters();
}
inline void SolveRequest::unsafe_arena_set_allocated_parameters(::operations_research::math_opt::SolveParametersProto* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.parameters_);
  }
  _impl_.parameters_ = reinterpret_cast<::operations_research::math_opt::SolveParametersProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:operations_research.math_opt.SolveRequest.parameters)
}
inline ::operations_research::math_opt::SolveParametersProto* SolveRequest::release_parameters() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::operations_research::math_opt::SolveParametersProto* released = _impl_.parameters_;
  _impl_.parameters_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::operations_research::math_opt::SolveParametersProto* SolveRequest::unsafe_arena_release_parameters() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.math_opt.SolveRequest.parameters)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::operations_research::math_opt::SolveParametersProto* temp = _impl_.parameters_;
  _impl_.parameters_ = nullptr;
  return temp;
}
inline ::operations_research::math_opt::SolveParametersProto* SolveRequest::_internal_mutable_parameters() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.parameters_ == nullptr) {
    auto* p = CreateMaybeMessage<::operations_research::math_opt::SolveParametersProto>(GetArena());
    _impl_.parameters_ = reinterpret_cast<::operations_research::math_opt::SolveParametersProto*>(p);
  }
  return _impl_.parameters_;
}
inline ::operations_research::math_opt::SolveParametersProto* SolveRequest::mutable_parameters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::operations_research::math_opt::SolveParametersProto* _msg = _internal_mutable_parameters();
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.SolveRequest.parameters)
  return _msg;
}
inline void SolveRequest::set_allocated_parameters(::operations_research::math_opt::SolveParametersProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.parameters_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.parameters_ = reinterpret_cast<::operations_research::math_opt::SolveParametersProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:operations_research.math_opt.SolveRequest.parameters)
}

// .operations_research.math_opt.ModelSolveParametersProto model_parameters = 5;
inline bool SolveRequest::has_model_parameters() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.model_parameters_ != nullptr);
  return value;
}
inline const ::operations_research::math_opt::ModelSolveParametersProto& SolveRequest::_internal_model_parameters() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::operations_research::math_opt::ModelSolveParametersProto* p = _impl_.model_parameters_;
  return p != nullptr ? *p : reinterpret_cast<const ::operations_research::math_opt::ModelSolveParametersProto&>(::operations_research::math_opt::_ModelSolveParametersProto_default_instance_);
}
inline const ::operations_research::math_opt::ModelSolveParametersProto& SolveRequest::model_parameters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.SolveRequest.model_parameters)
  return _internal_model_parameters();
}
inline void SolveRequest::unsafe_arena_set_allocated_model_parameters(::operations_research::math_opt::ModelSolveParametersProto* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.model_parameters_);
  }
  _impl_.model_parameters_ = reinterpret_cast<::operations_research::math_opt::ModelSolveParametersProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:operations_research.math_opt.SolveRequest.model_parameters)
}
inline ::operations_research::math_opt::ModelSolveParametersProto* SolveRequest::release_model_parameters() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::operations_research::math_opt::ModelSolveParametersProto* released = _impl_.model_parameters_;
  _impl_.model_parameters_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::operations_research::math_opt::ModelSolveParametersProto* SolveRequest::unsafe_arena_release_model_parameters() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.math_opt.SolveRequest.model_parameters)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::operations_research::math_opt::ModelSolveParametersProto* temp = _impl_.model_parameters_;
  _impl_.model_parameters_ = nullptr;
  return temp;
}
inline ::operations_research::math_opt::ModelSolveParametersProto* SolveRequest::_internal_mutable_model_parameters() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.model_parameters_ == nullptr) {
    auto* p = CreateMaybeMessage<::operations_research::math_opt::ModelSolveParametersProto>(GetArena());
    _impl_.model_parameters_ = reinterpret_cast<::operations_research::math_opt::ModelSolveParametersProto*>(p);
  }
  return _impl_.model_parameters_;
}
inline ::operations_research::math_opt::ModelSolveParametersProto* SolveRequest::mutable_model_parameters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::operations_research::math_opt::ModelSolveParametersProto* _msg = _internal_mutable_model_parameters();
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.SolveRequest.model_parameters)
  return _msg;
}
inline void SolveRequest::set_allocated_model_parameters(::operations_research::math_opt::ModelSolveParametersProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.model_parameters_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.model_parameters_ = reinterpret_cast<::operations_research::math_opt::ModelSolveParametersProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:operations_research.math_opt.SolveRequest.model_parameters)
}

// -------------------------------------------------------------------

// SolveResponse

// .operations_research.math_opt.SolveResultProto result = 1;
inline bool SolveResponse::has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.result_ != nullptr);
  return value;
}
inline const ::operations_research::math_opt::SolveResultProto& SolveResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::operations_research::math_opt::SolveResultProto* p = _impl_.result_;
  return p != nullptr ? *p : reinterpret_cast<const ::operations_research::math_opt::SolveResultProto&>(::operations_research::math_opt::_SolveResultProto_default_instance_);
}
inline const ::operations_research::math_opt::SolveResultProto& SolveResponse::result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.SolveResponse.result)
  return _internal_result();
}
inline void SolveResponse::unsafe_arena_set_allocated_result(::operations_research::math_opt::SolveResultProto* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.result_);
  }
  _impl_.result_ = reinterpret_cast<::operations_research::math_opt::SolveResultProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:operations_research.math_opt.SolveResponse.result)
}
inline ::operations_research::math_opt::SolveResultProto* SolveResponse::release_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::operations_research::math_opt::SolveResultProto* released = _impl_.result_;
  _impl_.result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::operations_research::math_opt::SolveResultProto* SolveResponse::unsafe_arena_release_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.math_opt.SolveResponse.result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::operations_research::math_opt::SolveResultProto* temp = _impl_.result_;
  _impl_.result_ = nullptr;
  return temp;
}
inline ::operations_research::math_opt::SolveResultProto* SolveResponse::_internal_mutable_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.result_ == nullptr) {
    auto* p = CreateMaybeMessage<::operations_research::math_opt::SolveResultProto>(GetArena());
    _impl_.result_ = reinterpret_cast<::operations_research::math_opt::SolveResultProto*>(p);
  }
  return _impl_.result_;
}
inline ::operations_research::math_opt::SolveResultProto* SolveResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::operations_research::math_opt::SolveResultProto* _msg = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.SolveResponse.result)
  return _msg;
}
inline void SolveResponse::set_allocated_result(::operations_research::math_opt::SolveResultProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.result_ = reinterpret_cast<::operations_research::math_opt::SolveResultProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:operations_research.math_opt.SolveResponse.result)
}

// repeated string messages = 2;
inline int SolveResponse::_internal_messages_size() const {
  return _internal_messages().size();
}
inline int SolveResponse::messages_size() const {
  return _internal_messages_size();
}
inline void SolveResponse::clear_messages() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.messages_.Clear();
}
inline std::string* SolveResponse::add_messages()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_messages()->Add();
  // @@protoc_insertion_point(field_add_mutable:operations_research.math_opt.SolveResponse.messages)
  return _s;
}
inline const std::string& SolveResponse::messages(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.SolveResponse.messages)
  return _internal_messages().Get(index);
}
inline std::string* SolveResponse::mutable_messages(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.SolveResponse.messages)
  return _internal_mutable_messages()->Mutable(index);
}
inline void SolveResponse::set_messages(int index, const std::string& value) {
  _internal_mutable_messages()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.SolveResponse.messages)
}
inline void SolveResponse::set_messages(int index, std::string&& value) {
  _internal_mutable_messages()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:operations_research.math_opt.SolveResponse.messages)
}
inline void SolveResponse::set_messages(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_messages()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:operations_research.math_opt.SolveResponse.messages)
}
inline void SolveResponse::set_messages(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_messages()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:operations_research.math_opt.SolveResponse.messages)
}
inline void SolveResponse::set_messages(int index, absl::string_view value) {
  _internal_mutable_messages()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:operations_research.math_opt.SolveResponse.messages)
}
inline void SolveResponse::add_messages(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_messages()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:operations_research.math_opt.SolveResponse.messages)
}
inline void SolveResponse::add_messages(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_messages()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:operations_research.math_opt.SolveResponse.messages)
}
inline void SolveResponse::add_messages(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_messages()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:operations_research.math_opt.SolveResponse.messages)
}
inline void SolveResponse::add_messages(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_messages()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:operations_research.math_opt.SolveResponse.messages)
}
inline void SolveResponse::add_messages(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_messages()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:operations_research.math_opt.SolveResponse.messages)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SolveResponse::messages() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.math_opt.SolveResponse.messages)
  return _internal_messages();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SolveResponse::mutable_messages() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.math_opt.SolveResponse.messages)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_messages();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SolveResponse::_internal_messages() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.messages_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SolveResponse::_internal_mutable_messages() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.messages_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace math_opt
}  // namespace operations_research


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_ortools_2fmath_5fopt_2frpc_2eproto_2epb_2eh
